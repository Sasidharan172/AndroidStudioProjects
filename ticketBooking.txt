interface TicketEvent {
  id: string;
  title: string;
  date: string;
  price: string;
}

type RootStackParamList = {
  Home: undefined;
  Booking: { event: TicketEvent };
}




import React, { useState } from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import { View, Text, TextInput, TouchableOpacity, FlatList, StyleSheet } from 'react-native';
import { SafeAreaProvider } from 'react-native-safe-area-context';
import { StackNavigationProp } from '@react-navigation/stack';
import { RouteProp } from '@react-navigation/native';

const Stack = createStackNavigator<RootStackParamList>();

type HomeScreenNavigationProp = StackNavigationProp<RootStackParamList, 'Home'>;

type HomeScreenProps = {
  navigation: HomeScreenNavigationProp;
};

type BookingScreenProps = {
  route: RouteProp<RootStackParamList, 'Booking'>;
  navigation: StackNavigationProp<RootStackParamList, 'Booking'>;
};

const HomeScreen: React.FC<HomeScreenProps> = ({ navigation }) => {
  const events: TicketEvent[] = [
    { id: '1', title: 'Concert A', date: '2025-02-01', price: '$50' },
    { id: '2', title: 'Theater Show', date: '2025-02-15', price: '$40' },
    { id: '3', title: 'Sports Match', date: '2025-02-28', price: '$60' },
  ];

  const renderEvent = ({ item }: { item: TicketEvent }) => (
    <TouchableOpacity
      style={styles.eventCard}
      onPress={() => navigation.navigate('Booking', { event: item })}
    >
      <Text style={styles.eventTitle}>{item.title}</Text>
      <Text style={styles.eventDetails}>Date: {item.date}</Text>
      <Text style={styles.eventDetails}>Price: {item.price}</Text>
    </TouchableOpacity>
  );

  return (
    <View style={styles.container}>
      <Text style={styles.header}>Available Events</Text>
      <FlatList
        data={events}
        renderItem={renderEvent}
        keyExtractor={item => item.id}
      />
    </View>
  );
};

const BookingScreen: React.FC<BookingScreenProps> = ({ route, navigation }) => {
  const { event } = route.params;
  const [quantity, setQuantity] = useState<string>('1');
  const [name, setName] = useState<string>('');
  const [email, setEmail] = useState<string>('');

  const handleBooking = (): void => {
    alert(`Booking confirmed!\n${quantity} tickets for ${event.title}`);
    navigation.navigate('Home');
  };

  return (
    <View style={styles.container}>
      <Text style={styles.header}>Book Tickets</Text>
      <Text style={styles.eventTitle}>{event.title}</Text>

      <TextInput
        style={styles.input}
        placeholder="Your Name"
        value={name}
        onChangeText={setName}
      />

      <TextInput
        style={styles.input}
        placeholder="Email"
        value={email}
        onChangeText={setEmail}
        keyboardType="email-address"
      />

      <TextInput
        style={styles.input}
        placeholder="Number of Tickets"
        value={quantity}
        onChangeText={setQuantity}
        keyboardType="numeric"
      />

      <TouchableOpacity
        style={styles.button}
        onPress={handleBooking}
      >
        <Text style={styles.buttonText}>Confirm Booking</Text>
      </TouchableOpacity>
    </View>
  );
};

const App = () => {
  return (
    <SafeAreaProvider>
      <NavigationContainer>
        <Stack.Navigator>
          <Stack.Screen
            name="Home"
            component={HomeScreen}
            options={{ title: 'Ticket Booking' }}
          />
          <Stack.Screen
            name="Booking"
            component={BookingScreen}
            options={{ title: 'Book Tickets' }}
          />
        </Stack.Navigator>
      </NavigationContainer>
    </SafeAreaProvider>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#fff',
  },
  header: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  eventCard: {
    padding: 15,
    marginBottom: 10,
    backgroundColor: '#f5f5f5',
    borderRadius: 8,
    elevation: 2,
  },
  eventTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 5,
  },
  eventDetails: {
    fontSize: 14,
    color: '#666',
  },
  input: {
    borderWidth: 1,
    borderColor: '#ddd',
    padding: 10,
    marginBottom: 15,
    borderRadius: 5,
  },
  button: {
    backgroundColor: '#007AFF',
    padding: 15,
    borderRadius: 5,
    alignItems: 'center',
  },
  buttonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
});

export default App;
